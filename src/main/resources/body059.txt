<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="ja">
<head>
<!-- Generated by javadoc -->
<title>HttpClient (Java SE 11 &amp; JDK 11 )</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="keywords" content="java.net.http.HttpClient class">
<meta name="keywords" content="newHttpClient()">
<meta name="keywords" content="newBuilder()">
<meta name="keywords" content="cookieHandler()">
<meta name="keywords" content="connectTimeout()">
<meta name="keywords" content="followRedirects()">
<meta name="keywords" content="proxy()">
<meta name="keywords" content="sslContext()">
<meta name="keywords" content="sslParameters()">
<meta name="keywords" content="authenticator()">
<meta name="keywords" content="version()">
<meta name="keywords" content="executor()">
<meta name="keywords" content="send()">
<meta name="keywords" content="sendAsync()">
<meta name="keywords" content="newWebSocketBuilder()">
<link href="../../../../stylesheet.css" rel="stylesheet" title="Style" type="text/css">
<link href="../../../../jquery/jquery-ui.min.css" rel="stylesheet" title="Style" type="text/css">
<link href="../../../../jquery-ui.overrides.css" rel="stylesheet" title="Style" type="text/css">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.6.1.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.min.js"></script>

    <link rel="schema.dcterms" href="http://purl.org/dc/terms/">
    <meta name="dcterms.created" content="2023-07-10T17:18:03+00:00">
    <meta content="Java Platform, Standard EditionのAPIリファレンス" name="dcterms.title">
    <meta name="dcterms.category" content="java">
    <meta name="dcterms.isVersionOf" content="DOCS">
    <meta name="dcterms.product" content="en/java/javase/11">
    <meta name="dcterms.identifier" content="E98501-15">
    <meta name="dcterms.release" content="11">
  <script id="ssot-metadata" type="application/json"> {"primary":{"category":{"short_name":"java","element_name":"Java","display_in_url":true},"suite":{"short_name":"not-applicable","element_name":"Not Applicable","display_in_url":false},"product_group":{"short_name":"not-applicable","element_name":"Not Applicable","display_in_url":false},"product":{"short_name":"javase","element_name":"Java SE","display_in_url":true},"release":{"short_name":"11","element_name":"11","display_in_url":true}}} </script>
    <script type="application/ld+json"> {"@context":"https://schema.org","@type":"WebPage","name":"HttpClient (Java SE 11 &amp; JDK 11 )","datePublished":"2018-09-25 15:16:24 GMT","dateModified":"2023-07-10 17:18:03 GMT"} </script>
    <script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<style type="text/css"> <!-- .merged:hover {text-decoration: underline;} --> </style>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="HttpClient (Java SE 11 & JDK 11 )";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":9,"i6":9,"i7":10,"i8":6,"i9":6,"i10":6,"i11":6,"i12":6,"i13":6,"i14":6};
var tabs = {65535:["t0","すべてのメソッド"],1:["t1","静的メソッド"],2:["t2","インスタンス・メソッド"],4:["t3","抽象メソッド"],8:["t4","具象メソッド"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div><span class="merged" id="HttpClient.1FBGVb"  title="原文: JavaScript is disabled on your browser.">JavaScriptがブラウザで無効になっています。</span></div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">

<!-- ========= START OF TOP NAVBAR ======= -->

<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><span class="merged" id="HttpClient.hBM96"  title="原文: Skip navigation links"><a href="#skip.navbar.top" >ナビゲーション・リンクをスキップ</a></span></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="ナビゲーション">
<li><span class="merged" id="HttpClient.3khU33"  title="原文: Overview"><a href="../../../../index.html">概要</a></span></li>
<li><span class="merged" id="HttpClient.1Xma6u"  title="原文: Module"><a href="../../../module-summary.html">モジュール</a></span></li>
<li><span class="merged" id="HttpClient.2F23Jc"  title="原文: Package"><a href="package-summary.html">パッケージ</a></span></li>
<li class="navBarCell1Rev"><span class="merged" id="HttpClient.oZPHH"  title="原文: Class">クラス</span></li>
<li><span class="merged" id="HttpClient.4eXea8"  title="原文: Use"><a href="class-use/HttpClient.html">使用</a></span></li>
<li><span class="merged" id="HttpClient.3UHpUV"  title="原文: Tree"><a href="package-tree.html">ツリー</a></span></li>
<li><span class="merged" id="HttpClient.1zLq34"  title="原文: Deprecated"><a href="../../../../deprecated-list.html">非推奨</a></span></li>
<li><span class="merged" id="HttpClient.11YYjx"  title="原文: Index"><a href="../../../../index-files/index-1.html">索引</a></span></li>
<li><span class="merged" id="HttpClient.4UGs5H"  title="原文: Help"><a href="../../../../help-doc.html">ヘルプ</a></span></li>
</ul>
<div class="aboutLanguage"><div style="margin-top: 14px;"><span class="merged" id="HttpClient.2uvGom" title="原文 : Java SE 11 &amp; JDK 11"><strong>Java SE 11 &amp; JDK 11</strong></span> </div></div>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_top">
<li><span class="merged" id="HttpClient.2iWcq7"  title="原文: All&nbsp;Classes"><a href="../../../../allclasses.html">すべてのクラス</a></span></li>
</ul>
<ul class="navListSearch">
<li><label for="search"><span class="merged" id="HttpClient.1c4Tan"  title="原文:: SEARCH:">検索:</span></label>
<input type="text" id="search" value="search" disabled="disabled">
<input disabled="disabled" id="reset" type="reset" value="reset">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div><span class="merged" id="HttpClient.1FBGVb.1"  title="原文: JavaScript is disabled on your browser.">JavaScriptがブラウザで無効になっています。</span></div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li><span class="merged" id="HttpClient.4QGzVB"  title="原文: Summary:&nbsp;">サマリー:&nbsp;</span></li>
<li><span class="merged" id="HttpClient.3FH7i5"  title="原文: Nested&nbsp;|&nbsp;"><a href="#nested.class.summary">ネスト</a>&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.2FJFo6"  title="原文: Field&nbsp;|&nbsp;">フィールド&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.43qrBZ"  title="原文: Constr&nbsp;|&nbsp;"><a href="#constructor.summary">コンストラクタ</a>&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.p4fG3"  title="原文: Method"><a href="#method.summary">メソッド</a></span></li>
</ul>
<ul class="subNavList">
<li><span class="merged" id="HttpClient.1tflnv"  title="原文: Detail:&nbsp;">詳細:&nbsp;</span></li>
<li><span class="merged" id="HttpClient.2FJFo6.1"  title="原文: Field&nbsp;|&nbsp;">フィールド&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.21J2FL"  title="原文: Constr&nbsp;|&nbsp;"><a href="#constructor.detail">コンストラクタ</a>&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.3bPfAb"  title="原文: Method"><a href="#method.detail">メソッド</a></span></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>

<!-- ========= END OF TOP NAVBAR ========= -->

</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<div style="width:100%"> <div title="免責事項: ここに記載されているドキュメントは、お客様の利便性のために翻訳ソフトウエアにより機械的に翻訳(機械翻訳)したものです。オリジナルの英語版もあわせてご確認ください。" style="width:150px;padding-left:5px;padding-right:5px;border:#ff0000 solid 1px;border-color: gray;font-size: small;color:gray;margin: 0 auto 0 auto;text-align:center"><a href="https://docs.oracle.com/cd/E85181_01/mt_disclaimer.html">機械翻訳について</a></div> </div>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="merged" id="HttpClient.4D7SkH" title="原文 : Module&nbsp;java.net.http"><span class="moduleLabelInType">モジュール</span>&nbsp;<a href="../../../module-summary.html">java.net.http</a></span></div>
<div class="subTitle"><span class="merged" id="HttpClient.seitA" title="原文 : Package&nbsp;java.net.http"><span class="packageLabelInType">パッケージ</span>&nbsp;<a href="package-summary.html">java.net.http</a></span></div>
<h2 class="title" title="クラスHttpClient"><span class="merged" id="HttpClient.3PIIJE" title="原文 : Class HttpClient">クラスHttpClient</span></h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><span class="merged" id="HttpClient.1MbCc0"  title="原文: java.lang.Object"><a href="../../../../java.base/java/lang/Object.html" >java.lang.Object</a></span></li>
<li>
<ul class="inheritance">
<li><span class="merged" id="HttpClient.11Agri"  title="原文: java.net.http.HttpClient">java.net.http.HttpClient</span></li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public abstract class <span class="typeNameLabel">HttpClient</span>
extends <a href="../../../../java.base/java/lang/Object.html" title="class in java.lang">Object</a></pre>
<div class="block"><span class="merged" id="HttpClient.3rYH8t" title="原文 : An HTTP Client.">HTTPクライアント。</span>

 <p> <span class="merged" id="HttpClient.1QTpCR.spl1" title="原文 : An HttpClient can be used to send requests and retrieve their responses."><code>HttpClient</code>を使用して<a href="HttpRequest.html" >「リクエスト」</a>を送信し、<a href="HttpResponse.html" >「レスポンス」</a>を取得できます。</span> <span class="merged" id="HttpClient.1QTpCR.spl2" title="原文 : An HttpClient is created through a builder."><a href="#newBuilder()"><code>builder</code></a>を介して<code> HttpClient</code>が作成されます。</span> <span class="merged" id="HttpClient.1QTpCR.spl3" title="原文 : The builder can be used to configure per-client state, like: the preferred protocol version ( HTTP/1.1 or HTTP/2 ), whether to follow redirects, a proxy, an authenticator, etc. Once built, an HttpClient is immutable, and can be used to send multiple requests.">ビルダーを使用して、クライアントごとに次のような状態を構成できます: 優先プロトコル・バージョン(HTTP/1.1またはHTTP/2)、リダイレクトの有無、プロキシ、認証プロバイダなどがあります。一度ビルドされると、<code>HttpClient</code>は不変になり、複数のリクエストの送信に使用できます。</span> 

 </p><p> <span class="merged" id="HttpClient.2ob4eH" title="原文 : An HttpClient provides configuration information, and resource sharing, for all requests sent through it."><code>HttpClient</code>は、すべてのリクエストの構成情報とリソース共有を提供します。</span>

 </p><p> <span class="merged" id="HttpClient.YaV4K.spl1" title="原文 : A BodyHandler must be supplied for each HttpRequest sent."><a href="HttpRequest.html" ><code>HttpRequest</code></a>が送信されるたびに<a href="HttpResponse.BodyHandler.html" ><code>BodyHandler</code></a>を指定する必要があります。</span> <span class="merged" id="HttpClient.YaV4K.spl2" title="原文 : The BodyHandler determines how to handle the response body, if any."><code>BodyHandler</code>は、レスポンス本文(存在する場合)の処理方法を決定します。</span> <span class="merged" id="HttpClient.YaV4K.spl3" title="原文 : Once an HttpResponse is received, the headers, response code, and body (typically) are available."><a href="HttpResponse.html" ><code>HttpResponse</code></a>を受信すると、ヘッダー、レスポンス・コードおよび本文(typically)を使用できます。</span> <span class="merged" id="HttpClient.YaV4K.spl4" title="原文 : Whether the response body bytes have been read or not depends on the type, T, of the response body.">レスポンス本文のバイトが読み取られたかどうかは、レスポンス本文のタイプ(<code>T</code>)によって決まります。</span> 

 </p><p> <span class="merged" id="HttpClient.43BfLF" title="原文 : Requests can be sent either synchronously or asynchronously:">リクエストは同期または非同期のいずれかで送信できます。</span>
 <ul>
     <li><span class="merged" id="HttpClient.35gi2V" title="原文 : send(HttpRequest, BodyHandler) blocks until the request has been sent and the response has been received."><a href="#send(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)"><code>send(HttpRequest, BodyHandler)</code></a>ブロックは、リクエストが送信されてレスポンスが受信されるまでブロックされます。</span></li>

     <li><span class="merged" id="HttpClient.2w4t5h.spl1" title="原文 : sendAsync(HttpRequest, BodyHandler) sends the request and receives the response asynchronously."><a href="#sendAsync(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)"><code>sendAsync(HttpRequest, BodyHandler)</code></a>がリクエストを送信し、レスポンスを非同期に受信します。</span> <span class="merged" id="HttpClient.2w4t5h.spl2" title="原文 : The sendAsync method returns immediately with a CompletableFuture&lt;HttpResponse&gt;."><code>sendAsync</code>メソッドは、すぐに<a href="../../../../java.base/java/util/concurrent/CompletableFuture.html" ><code>CompletableFuture</code></a>&lt;<a href="HttpResponse.html" ><code>HttpResponse</code></a>>を返します。</span> <span class="merged" id="HttpClient.2w4t5h.spl3" title="原文 : The CompletableFuture completes when the response becomes available.">レスポンスが使用可能になると、<code> CompletableFuture</code>が完了します。</span> <span class="merged" id="HttpClient.2w4t5h.spl4" title="原文 : The returned CompletableFuture can be combined in different ways to declare dependencies among several asynchronous tasks.">返された<code>CompletableFuture</code>は、様々な方法で結合して複数の非同期タスク間の依存性を宣言できます。</span> </li>
 </ul>

 </p><p><span class="merged" id="HttpClient.23q8H4"  title="原文:: Synchronous Example"><b>同期の例</b></span>
 <pre><code>   HttpClient client = HttpClient.newBuilder()
        .version(Version.HTTP_1_1)
        .followRedirects(Redirect.NORMAL)
        .connectTimeout(Duration.ofSeconds(20))
        .proxy(ProxySelector.of(new InetSocketAddress("proxy.example.com", 80)))
        .authenticator(Authenticator.getDefault())
        .build();
   HttpResponse&lt;String&gt; response = client.send(request, BodyHandlers.ofString());
   System.out.println(response.statusCode());
   System.out.println(response.body());  </code></pre>

 </p><p><span class="merged" id="HttpClient.4QzYgX" title="原文 : Asynchronous Example"><b>非同期の例</b></span>
 <pre><code>   HttpRequest request = HttpRequest.newBuilder()
        .uri(URI.create("https://foo.com/"))
        .timeout(Duration.ofMinutes(2))
        .header("Content-Type", "application/json")
        .POST(BodyPublishers.ofFile(Paths.get("file.json")))
        .build();
   client.sendAsync(request, BodyHandlers.ofString())
        .thenApply(HttpResponse::body)
        .thenAccept(System.out::println);  </code></pre>

 </p><p> <span class="merged" id="HttpClient.1jbOh"  title="原文:: Security checks"><a id="securitychecks"></a><b>セキュリティ・チェック</b></span>

 </p><p> <span class="merged" id="HttpClient.2qbkU1.spl1" title="原文 : If a security manager is present then security checks are performed by the HTTP Client&apos;s sending methods.">セキュリティ・マネージャが存在する場合、HTTPクライアントがメソッドを送信することによってセキュリティ検査が実行されます。</span> <span class="merged" id="HttpClient.2qbkU1.spl2" title="原文 : An appropriate URLPermission is required to access the destination server, and proxy server if one has been configured.">宛先サーバーにアクセスするには適切な<a href="../../../../java.base/java/net/URLPermission.html" ><code>URLPermission</code></a>が必要で、プロキシ・サーバーが構成されている場合はプロキシ・サーバーにアクセスする必要があります。</span> <span class="merged" id="HttpClient.2qbkU1.spl3" title="原文 : The form of the URLPermission required to access a proxy has a method parameter of &quot;CONNECT&quot; (for all kinds of proxying) and a URL string of the form &quot;socket://host:port&quot; where host and port specify the proxy&apos;s address.">プロキシにアクセスするために必要な<code>URLPermission</code>の形式には、<code>"CONNECT"</code> (すべての種類のプロキシ処理)の<code>method</code>パラメータと、フォーム<code>"socket://host:port"</code>の<code>URL</code>文字列があり、ホストとポートでプロキシ・アドレスを指定します。</span> </p></div>
<dl>
<dt><span class="merged" id="HttpClient.1WSzU2"  title="原文: Implementation Note:"><span class="simpleTagLabel">実装上のノート:</span></span></dt>
<dd><span class="merged" id="HttpClient.mjbuX.spl1" title="原文 : If an explicit executor has not been set for an HttpClient, and a security manager has been installed, then the default executor will execute asynchronous and dependent tasks in a context that is granted no permissions."><a href="HttpClient.Builder.html#executor(java.util.concurrent.Executor)">executor</a>が<code>HttpClient</code>に明示的に設定されておらず、セキュリティ・マネージャがインストールされている場合、デフォルト・エグゼキュータは権限が付与されていないコンテキストで非同期タスクおよび依存タスクを実行します。</span> <span class="merged" id="HttpClient.mjbuX.spl2" title="原文 : Custom request body publishers, response body handlers, response body subscribers, and WebSocket Listeners, if executing operations that require privileges, should do so within an appropriate privileged context.">特権を必要とする操作を実行する場合、カスタム<a href="HttpRequest.BodyPublisher.html" >「ボディ・パブリッシャをリクエスト」</a>、<a href="HttpResponse.BodyHandler.html" >「レスポンス本文ハンドラ」</a>、<a href="HttpResponse.BodySubscriber.html" >「レスポンス本文サブスクライバ」</a>、および<a href="WebSocket.Listener.html" >「WebSocketリスナー」</a>は、適切な<a href="../../../../java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)">「特権的なコンテキスト」</a>内で行う必要があります。</span> </dd>
<dt><span class="merged" id="HttpClient.2OICU0"  title="原文: Since:"><span class="simpleTagLabel">導入されたバージョン:</span></span></dt>
<dd><span class="merged" id="HttpClient.3vNPAl"  title="原文: 11">11</span></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3><span class="merged" id="HttpClient.ANrZt"  title="原文: Nested Class Summary">ネストされたクラスのサマリー</span></h3>
<table class="memberSummary">
<caption><span class="merged" id="HttpClient.3tPVA5"  title="原文: Nested Classes&nbsp;"><span>ネストされたクラス</span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col"><span class="merged" id="HttpClient.Arwr1"  title="原文: Modifier and Type">修飾子と型</span></th>
<th class="colSecond" scope="col"><span class="merged" id="HttpClient.oZPHH.1"  title="原文: Class">クラス</span></th>
<th class="colLast" scope="col"><span class="merged" id="HttpClient.4JM9z7"  title="原文: Description">説明</span></th>
</tr>
<tr class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.dg0FG"  title="原文: static interface&nbsp;"><code>static interface&nbsp;</code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.4Xu9Nv"  title="原文: HttpClient.Builder"><code><span class="memberNameLink"><a href="HttpClient.Builder.html" >HttpClient.Builder</a></span></code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.4a9EOI" title="原文 : A builder of HTTP Clients."><a href="HttpClient.html" >「HTTPクライアント」</a>のビルダー。</span></div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><span class="merged" id="HttpClient.3rN1UK"  title="原文: static class&nbsp;"><code>static class&nbsp;</code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.avPXz"  title="原文: HttpClient.Redirect"><code><span class="memberNameLink"><a href="HttpClient.Redirect.html" >HttpClient.Redirect</a></span></code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.tFNw6" title="原文 : Defines the automatic redirection policy.">自動リダイレクション・ポリシーを定義します。</span></div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.3rN1UK.1"  title="原文: static class&nbsp;"><code>static class&nbsp;</code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.J4Ao6"  title="原文: HttpClient.Version"><code><span class="memberNameLink"><a href="HttpClient.Version.html" >HttpClient.Version</a></span></code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.4TXSPo" title="原文 : The HTTP protocol version.">HTTPプロトコルのバージョン。</span></div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3><span class="merged" id="HttpClient.1NgI6f"  title="原文: Constructor Summary">コンストラクタのサマリー</span></h3>
<table class="memberSummary">
<caption><span class="merged" id="HttpClient.3mspbH"  title="原文: Constructors&nbsp;"><span>コンストラクタ</span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col"><span class="merged" id="HttpClient.1VztzX"  title="原文: Modifier">修飾子</span></th>
<th class="colSecond" scope="col"><span class="merged" id="HttpClient.4bIOx4"  title="原文:: Constructor">コンストラクタ</span></th>
<th class="colLast" scope="col"><span class="merged" id="HttpClient.4JM9z7.1"  title="原文: Description">説明</span></th>
</tr>
<tr class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.43LtVq"  title="原文: protected "><code>protected </code></span></td>
<th class="colConstructorName" scope="row"><span class="merged" id="HttpClient.EamEu"  title="原文: HttpClient()"><code><span class="memberNameLink"><a href="#%3Cinit%3E()">HttpClient</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.16DkfP" title="原文 : Creates an HttpClient.">HttpClientを作成します。</span></div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3><span class="merged" id="HttpClient.3TFECy"  title="原文: Method Summary">メソッドのサマリー</span></h3>
<table class="memberSummary">
<caption><span class="merged" id="HttpClient.4AL9au"  title="原文: All Methods&nbsp;Static Methods&nbsp;Instance Methods&nbsp;Abstract Methods&nbsp;Concrete Methods&nbsp;"><span class="activeTableTab" id="t0"><span>すべてのメソッド</span><span class="tabEnd">&nbsp;</span></span><span class="tableTab" id="t1"><span><a href="javascript:show(1);">staticメソッド</a></span><span class="tabEnd">&nbsp;</span></span><span class="tableTab" id="t2"><span><a href="javascript:show(2);">インスタンス・メソッド</a></span><span class="tabEnd">&nbsp;</span></span><span class="tableTab" id="t3"><span><a href="javascript:show(4);">抽象メソッド</a></span><span class="tabEnd">&nbsp;</span></span><span class="tableTab" id="t4"><span><a href="javascript:show(8);">具象メソッド</a></span><span class="tabEnd">&nbsp;</span></span></span></caption>
<tr>
<th class="colFirst" scope="col"><span class="merged" id="HttpClient.Arwr1.1"  title="原文: Modifier and Type">修飾子と型</span></th>
<th class="colSecond" scope="col"><span class="merged" id="HttpClient.1e8dVO"  title="原文: Method">メソッド</span></th>
<th class="colLast" scope="col"><span class="merged" id="HttpClient.4JM9z7.2"  title="原文: Description">説明</span></th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.3Sr7kY"  title="原文: abstract Optional&lt;Authenticator&gt;"><code>abstract <a href="../../../../java.base/java/util/Optional.html" >Optional</a>&lt;<a href="../../../../java.base/java/net/Authenticator.html" >Authenticator</a>></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.1Peb7Z"  title="原文: authenticator()"><code><span class="memberNameLink"><a href="#authenticator()">authenticator</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.449wWc" title="原文 : Returns an Optional containing the Authenticator set on this client.">このクライアントに設定された<a href="../../../../java.base/java/net/Authenticator.html" ><code>Authenticator</code></a>を含む<code>Optional</code>を返します。</span></div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><span class="merged" id="HttpClient.H6dz1"  title="原文: abstract Optional&lt;Duration&gt;"><code>abstract <a href="../../../../java.base/java/util/Optional.html" >Optional</a>&lt;<a href="../../../../java.base/java/time/Duration.html" >Duration</a>></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.1iBPoH"  title="原文: connectTimeout()"><code><span class="memberNameLink"><a href="#connectTimeout()">connectTimeout</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.boDV9" title="原文 : Returns an Optional containing the connect timeout duration for this client.">このクライアントの<i>「接続タイムアウト時間」</i>を含む<code>Optional</code>を返します。</span></div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.3qOzOH"  title="原文: abstract Optional&lt;CookieHandler&gt;"><code>abstract <a href="../../../../java.base/java/util/Optional.html" >Optional</a>&lt;<a href="../../../../java.base/java/net/CookieHandler.html" >CookieHandler</a>></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.1JsBvx"  title="原文: cookieHandler()"><code><span class="memberNameLink"><a href="#cookieHandler()">cookieHandler</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.1EXs80" title="原文 : Returns an Optional containing this client&apos;s CookieHandler.">このクライアント<a href="../../../../java.base/java/net/CookieHandler.html" ><code>CookieHandler</code></a>を含む<code>Optional</code>を返します。</span></div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><span class="merged" id="HttpClient.K5H4K"  title="原文: abstract Optional&lt;Executor&gt;"><code>abstract <a href="../../../../java.base/java/util/Optional.html" >Optional</a>&lt;<a href="../../../../java.base/java/util/concurrent/Executor.html" >Executor</a>></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.3gY3Fg"  title="原文: executor()"><code><span class="memberNameLink"><a href="#executor()">executor</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.GvdLf" title="原文 : Returns an Optional containing this client&apos;s Executor.">このクライアント<a href="../../../../java.base/java/util/concurrent/Executor.html" ><code>Executor</code></a>を含む<code>Optional</code>を返します。</span></div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.3wOOdp"  title="原文: abstract HttpClient.Redirect"><code>abstract <a href="HttpClient.Redirect.html" >HttpClient.Redirect</a></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.KhkRT"  title="原文: followRedirects()"><code><span class="memberNameLink"><a href="#followRedirects()">followRedirects</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.ctJgQ" title="原文 : Returns the follow redirects policy for this client.">このクライアントのフォロー・リダイレクト・ポリシーを返します。</span></div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><span class="merged" id="HttpClient.3MfCFO"  title="原文: static HttpClient.Builder"><code>static <a href="HttpClient.Builder.html" >HttpClient.Builder</a></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.3Vb3Dc"  title="原文: newBuilder()"><code><span class="memberNameLink"><a href="#newBuilder()">newBuilder</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.3bHtQq" title="原文 : Creates a new HttpClient builder.">新しい<code>HttpClient</code>ビルダーを作成します。</span></div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.6AQl"  title="原文: static HttpClient"><code>static <a href="HttpClient.html" >HttpClient</a></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.3eo3Py"  title="原文: newHttpClient()"><code><span class="memberNameLink"><a href="#newHttpClient()">newHttpClient</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.1pgRuz" title="原文 : Returns a new HttpClient with default settings.">デフォルト設定を使用して新しい<code>HttpClient</code>を返します。</span></div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><span class="merged" id="HttpClient.FisKY"  title="原文: WebSocket.Builder"><code><a href="WebSocket.Builder.html" >WebSocket.Builder</a></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.31podb"  title="原文: newWebSocketBuilder()"><code><span class="memberNameLink"><a href="#newWebSocketBuilder()">newWebSocketBuilder</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.2d5FZf" title="原文 : Creates a new WebSocket builder (optional operation).">新しい<code>WebSocket</code>ビルダー(オプションの操作)を作成します。</span></div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.liZaa"  title="原文: abstract Optional&lt;ProxySelector&gt;"><code>abstract <a href="../../../../java.base/java/util/Optional.html" >Optional</a>&lt;<a href="../../../../java.base/java/net/ProxySelector.html" >ProxySelector</a>></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.4N0cQU"  title="原文: proxy()"><code><span class="memberNameLink"><a href="#proxy()">proxy</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.85gz0" title="原文 : Returns an Optional containing the ProxySelector supplied to this client.">このクライアントに提供された<code>ProxySelector</code>を含む<code>Optional</code>を返します。</span></div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><span class="merged" id="HttpClient.2gCY8y"  title="原文: abstract &lt;T&gt;&nbsp;HttpResponse&lt;T&gt;"><code>abstract &lt;T>&nbsp;<a href="HttpResponse.html" >HttpResponse</a>&lt;T></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.4RcFZj"  title="原文: send​(HttpRequest&nbsp;request, HttpResponse.BodyHandler&lt;T&gt;&nbsp;responseBodyHandler)"><code><span class="memberNameLink"><a href="#send(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)">send</a></span>​(<a href="HttpRequest.html" >HttpRequest</a>&nbsp;request, <a href="HttpResponse.BodyHandler.html" >HttpResponse.BodyHandler</a>&lt;T>&nbsp;responseBodyHandler)</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.199kWW" title="原文 : Sends the given request using this client, blocking if necessary to get the response.">このクライアントを使用してリクエストを送信し、必要に応じてブロックしてレスポンスを取得します。</span></div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.rjlc6"  title="原文: abstract &lt;T&gt;&nbsp;CompletableFuture&lt;HttpResponse&lt;T&gt;&gt;"><code>abstract &lt;T>&nbsp;<a href="../../../../java.base/java/util/concurrent/CompletableFuture.html" >CompletableFuture</a>&lt;<a href="HttpResponse.html" >HttpResponse</a>&lt;T>></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.4KBFap"  title="原文: sendAsync​(HttpRequest&nbsp;request, HttpResponse.BodyHandler&lt;T&gt;&nbsp;responseBodyHandler)"><code><span class="memberNameLink"><a href="#sendAsync(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)">sendAsync</a></span>​(<a href="HttpRequest.html" >HttpRequest</a>&nbsp;request, <a href="HttpResponse.BodyHandler.html" >HttpResponse.BodyHandler</a>&lt;T>&nbsp;responseBodyHandler)</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.tqqJy" title="原文 : Sends the given request asynchronously using this client with the given response body handler.">指定されたレスポンス本文ハンドラとともに、このクライアントを使用して、指定されたリクエストを非同期に送信します。</span></div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><span class="merged" id="HttpClient.rjlc6.1"  title="原文: abstract &lt;T&gt;&nbsp;CompletableFuture&lt;HttpResponse&lt;T&gt;&gt;"><code>abstract &lt;T>&nbsp;<a href="../../../../java.base/java/util/concurrent/CompletableFuture.html" >CompletableFuture</a>&lt;<a href="HttpResponse.html" >HttpResponse</a>&lt;T>></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.14JYdg"  title="原文: sendAsync​(HttpRequest&nbsp;request, HttpResponse.BodyHandler&lt;T&gt;&nbsp;responseBodyHandler, HttpResponse.PushPromiseHandler&lt;T&gt;&nbsp;pushPromiseHandler)"><code><span class="memberNameLink"><a href="#sendAsync(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler,java.net.http.HttpResponse.PushPromiseHandler)">sendAsync</a></span>​(<a href="HttpRequest.html" >HttpRequest</a>&nbsp;request, <a href="HttpResponse.BodyHandler.html" >HttpResponse.BodyHandler</a>&lt;T>&nbsp;responseBodyHandler, <a href="HttpResponse.PushPromiseHandler.html" >HttpResponse.PushPromiseHandler</a>&lt;T>&nbsp;pushPromiseHandler)</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.Ddqqh" title="原文 : Sends the given request asynchronously using this client with the given response body handler and push promise handler.">指定されたレスポンス本文ハンドラとともにこのクライアントを使用して、指定されたリクエストを非同期に送信し、プッシュ・プロ・ミス・ハンドラをプッシュします。</span></div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.12qi3I"  title="原文: abstract SSLContext"><code>abstract <a href="../../../../java.base/javax/net/ssl/SSLContext.html" >SSLContext</a></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.1PYY9T"  title="原文: sslContext()"><code><span class="memberNameLink"><a href="#sslContext()">sslContext</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.3tjxji" title="原文 : Returns this client&apos;s SSLContext.">このクライアント<code>SSLContext</code>を返します。</span></div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><span class="merged" id="HttpClient.2LhHqV"  title="原文: abstract SSLParameters"><code>abstract <a href="../../../../java.base/javax/net/ssl/SSLParameters.html" >SSLParameters</a></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.1hDjY3"  title="原文: sslParameters()"><code><span class="memberNameLink"><a href="#sslParameters()">sslParameters</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.g5wg9" title="原文 : Returns a copy of this client&apos;s SSLParameters.">このクライアント<a href="../../../../java.base/javax/net/ssl/SSLParameters.html" ><code>SSLParameters</code></a>のコピーを返します。</span></div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><span class="merged" id="HttpClient.4C8CHi"  title="原文: abstract HttpClient.Version"><code>abstract <a href="HttpClient.Version.html" >HttpClient.Version</a></code></span></td>
<th class="colSecond" scope="row"><span class="merged" id="HttpClient.2IZ8HZ"  title="原文: version()"><code><span class="memberNameLink"><a href="#version()">version</a></span>()</code></span></th>
<td class="colLast">
<div class="block"><span class="merged" id="HttpClient.m22Q3" title="原文 : Returns the preferred HTTP protocol version for this client.">このクライアントの優先HTTPプロトコル・バージョンを返します。</span></div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3><span class="merged" id="HttpClient.2uY9FA" title="原文 : Methods declared in class&nbsp;java.lang.Object">クラス&nbsp;java.lang.<a href="../../../../java.base/java/lang/Object.html" >Object</a>で宣言されたメソッド</span></h3>
<span class="merged" id="HttpClient.2k8BgA"  title="原文: clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait"><code><a href="../../../../java.base/java/lang/Object.html#clone()">clone</a>, <a href="../../../../java.base/java/lang/Object.html#equals(java.lang.Object)">equals</a>, <a href="../../../../java.base/java/lang/Object.html#finalize()">finalize</a>, <a href="../../../../java.base/java/lang/Object.html#getClass()">getClass</a>, <a href="../../../../java.base/java/lang/Object.html#hashCode()">hashCode</a>, <a href="../../../../java.base/java/lang/Object.html#notify()">notify</a>, <a href="../../../../java.base/java/lang/Object.html#notifyAll()">notifyAll</a>, <a href="../../../../java.base/java/lang/Object.html#toString()">toString</a>, <a href="../../../../java.base/java/lang/Object.html#wait()">wait</a>, <a href="../../../../java.base/java/lang/Object.html#wait(long)">wait</a>, <a href="../../../../java.base/java/lang/Object.html#wait(long,int)">wait</a></code></span></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3><span class="merged" id="HttpClient.OwoLp"  title="原文: Constructor Detail">コンストラクタの詳細</span></h3>
<a id="&lt;init&gt;()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4><span class="merged" id="HttpClient.2B2kck"  title="原文: HttpClient">HttpClient</span></h4>
<pre>protected&nbsp;HttpClient()</pre>
<div class="block"><span class="merged" id="HttpClient.16DkfP.1" title="原文 : Creates an HttpClient.">HttpClientを作成します。</span></div>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3><span class="merged" id="HttpClient.1LAxgS"  title="原文: Method Detail">メソッドの詳細</span></h3>
<a id="newHttpClient()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.BIdx2"  title="原文: newHttpClient">newHttpClient</span></h4>
<pre class="methodSignature">public static&nbsp;<a href="HttpClient.html" title="class in java.net.http">HttpClient</a>&nbsp;newHttpClient()</pre>
<div class="block"><span class="merged" id="HttpClient.1pgRuz.1" title="原文 : Returns a new HttpClient with default settings.">デフォルト設定を使用して新しい<code>HttpClient</code>を返します。</span>

 <p> <span class="merged" id="HttpClient.2P2jIB" title="原文 : Equivalent to newBuilder().build()."><code>newBuilder().build()</code>と等価です。</span>

 </p><p> <span class="merged" id="HttpClient.1iWhGQ" title="原文 : The default settings include: the &quot;GET&quot; request method, a preference of HTTP/2, a redirection policy of NEVER, the default proxy selector, and the default SSL context.">デフォルト設定には: "GET"リクエスト・メソッド、<a href="HttpClient.Version.html#HTTP_2">HTTP/2</a>のプリファレンス、NEVERのリダイレクション・ポリシー、<a href="../../../../java.base/java/net/ProxySelector.html#getDefault()">「デフォルト・プロキシ・セレクタ」</a>、および<a href="../../../../java.base/javax/net/ssl/SSLContext.html#getDefault()">「デフォルトのSSLコンテキスト」</a>があります。</span></p></div>
<dl>
<dt><span class="merged" id="HttpClient.1WSzU2.1"  title="原文: Implementation Note:"><span class="simpleTagLabel">実装上のノート:</span></span></dt>
<dd><span class="merged" id="HttpClient.3uaMge.spl1" title="原文 : The system-wide default values are retrieved at the time the HttpClient instance is constructed.">システム全体のデフォルト値は、<code>HttpClient</code>インスタンスの構築時に取得されます。</span> <span class="merged" id="HttpClient.3uaMge.spl2" title="原文 : Changing the system-wide values after an HttpClient instance has been built, for instance, by calling ProxySelector.setDefault(ProxySelector) or SSLContext.setDefault(SSLContext), has no effect on already built instances.">たとえば<a href="../../../../java.base/java/net/ProxySelector.html#setDefault(java.net.ProxySelector)"><code>ProxySelector.setDefault(ProxySelector)</code></a>または<a href="../../../../java.base/javax/net/ssl/SSLContext.html#setDefault(javax.net.ssl.SSLContext)"><code>SSLContext.setDefault(SSLContext)</code></a>を呼び出して、<code>HttpClient</code>インスタンスが構築された後にシステム全体の値を変更しても、すでにビルドされたインスタンスには影響しません。</span> </dd>
<dt><span class="merged" id="HttpClient.3jgv1U"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.4ByeJF" title="原文 : a new HttpClient">新しいHttpClient</span></dd>
</dl>
</li>
</ul>
<a id="newBuilder()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.RTasG"  title="原文: newBuilder">newBuilder</span></h4>
<pre class="methodSignature">public static&nbsp;<a href="HttpClient.Builder.html" title="interface in java.net.http">HttpClient.Builder</a>&nbsp;newBuilder()</pre>
<div class="block"><span class="merged" id="HttpClient.3bHtQq.1" title="原文 : Creates a new HttpClient builder.">新しい<code>HttpClient</code>ビルダーを作成します。</span></div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.1"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.1V1GQx" title="原文 : an HttpClient.Builder">an <code>HttpClient.Builder</code></span></dd>
</dl>
</li>
</ul>
<a id="cookieHandler()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.31XtIz"  title="原文: cookieHandler">cookieHandler</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../../../../java.base/java/util/Optional.html" title="class in java.util">Optional</a>&lt;<a href="../../../../java.base/java/net/CookieHandler.html" title="class in java.net">CookieHandler</a>&gt;&nbsp;cookieHandler()</pre>
<div class="block"><span class="merged" id="HttpClient.3FHbTD.spl1" title="原文 : Returns an Optional containing this client&apos;s CookieHandler.">このクライアント<a href="../../../../java.base/java/net/CookieHandler.html" ><code>CookieHandler</code></a>を含む<code>Optional</code>を返します。</span> <span class="merged" id="HttpClient.3FHbTD.spl2" title="原文 : If no CookieHandler was set in this client&apos;s builder, then the Optional is empty.">このクライアントビルダーに<code>CookieHandler</code>が設定されていない場合、<code>Optional</code>は空です。</span> </div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.2"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.4GFWAa" title="原文 : an Optional containing this client&apos;s CookieHandler">このクライアントを含む<code>Optional</code> <code>CookieHandler</code></span></dd>
</dl>
</li>
</ul>
<a id="connectTimeout()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.1oKeLZ"  title="原文: connectTimeout">connectTimeout</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../../../../java.base/java/util/Optional.html" title="class in java.util">Optional</a>&lt;<a href="../../../../java.base/java/time/Duration.html" title="class in java.time">Duration</a>&gt;&nbsp;connectTimeout()</pre>
<div class="block"><span class="merged" id="HttpClient.2qJqeY.spl1" title="原文 : Returns an Optional containing the connect timeout duration for this client.">このクライアントの<i>「接続タイムアウト時間」</i>を含む<code>Optional</code>を返します。</span> <span class="merged" id="HttpClient.2qJqeY.spl2" title="原文 : If the connect timeout duration was not set in the client&apos;s builder, then the Optional is empty.">クライアント・ビルダーで<a href="HttpClient.Builder.html#connectTimeout(java.time.Duration)">「接続タイムアウト時間」</a>が設定されていない場合、<code>Optional</code>は空になります。</span> </div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.3"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.22enNU" title="原文 : an Optional containing this client&apos;s connect timeout duration">このクライアント接続のタイムアウト時間を含む<code>Optional</code></span></dd>
</dl>
</li>
</ul>
<a id="followRedirects()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.3ojNw2"  title="原文: followRedirects">followRedirects</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="HttpClient.Redirect.html" title="enum in java.net.http">HttpClient.Redirect</a>&nbsp;followRedirects()</pre>
<div class="block"><span class="merged" id="HttpClient.14u0Xr.spl1" title="原文 : Returns the follow redirects policy for this client.">このクライアントのフォロー・リダイレクト・ポリシーを返します。</span> <span class="merged" id="HttpClient.14u0Xr.spl2" title="原文 : The default value for client&apos;s built by builders that do not specify a redirect policy is NEVER.">リダイレクト・ポリシーを指定しないBuilderによって構築されたクライアントのデフォルト値は<a href="HttpClient.Redirect.html#NEVER"><code>NEVER</code></a>です。</span> </div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.4"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.3YsSFJ" title="原文 : this client&apos;s follow redirects setting">このクライアントはリダイレクト設定に従います</span></dd>
</dl>
</li>
</ul>
<a id="proxy()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.2752qM"  title="原文:: proxy">proxy</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../../../../java.base/java/util/Optional.html" title="class in java.util">Optional</a>&lt;<a href="../../../../java.base/java/net/ProxySelector.html" title="class in java.net">ProxySelector</a>&gt;&nbsp;proxy()</pre>
<div class="block"><span class="merged" id="HttpClient.MaJEI.spl1" title="原文 : Returns an Optional containing the ProxySelector supplied to this client.">このクライアントに提供された<code>ProxySelector</code>を含む<code>Optional</code>を返します。</span> <span class="merged" id="HttpClient.MaJEI.spl2" title="原文 : If no proxy selector was set in this client&apos;s builder, then the Optional is empty.">このクライアントビルダーにプロキシ・セレクタが設定されていない場合、<code>Optional</code>は空です。</span> 

 <p> <span class="merged" id="HttpClient.4drwOS" title="原文 : Even though this method may return an empty optional, the HttpClient may still have a non-exposed default proxy selector that is used for sending HTTP requests.">このメソッドが空のオプションを返すこともありますが、HTTPリクエストの送信に使用される、<code> HttpClient</code>には突然の<a href="HttpClient.Builder.html#proxy(java.net.ProxySelector)">「デフォルト・プロキシ・セレクタ」</a>がある可能性があります。</span></p></div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.5"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.47GkLH" title="原文 : an Optional containing the proxy selector supplied to this client.">このクライアントに提供されたプロキシ・セレクタを含む<code>Optional</code>。</span></dd>
</dl>
</li>
</ul>
<a id="sslContext()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.55NN"  title="原文: sslContext">sslContext</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../../../../java.base/javax/net/ssl/SSLContext.html" title="class in javax.net.ssl">SSLContext</a>&nbsp;sslContext()</pre>
<div class="block"><span class="merged" id="HttpClient.3tjxji.1" title="原文 : Returns this client&apos;s SSLContext.">このクライアント<code>SSLContext</code>を返します。</span>

 <p> <span class="merged" id="HttpClient.4PkJlX" title="原文 : If no SSLContext was set in this client&apos;s builder, then the default context is returned.">このクライアントビルダーに<code>SSLContext</code>が設定されていない場合は、<a href="../../../../java.base/javax/net/ssl/SSLContext.html#getDefault()">「デフォルト・コンテキスト」</a>が返されます。</span></p></div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.6"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.17tSGl" title="原文 : this client&apos;s SSLContext">このクライアントSSLContext</span></dd>
</dl>
</li>
</ul>
<a id="sslParameters()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.38FAEt"  title="原文: sslParameters">sslParameters</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../../../../java.base/javax/net/ssl/SSLParameters.html" title="class in javax.net.ssl">SSLParameters</a>&nbsp;sslParameters()</pre>
<div class="block"><span class="merged" id="HttpClient.g5wg9.1" title="原文 : Returns a copy of this client&apos;s SSLParameters.">このクライアント<a href="../../../../java.base/javax/net/ssl/SSLParameters.html" ><code>SSLParameters</code></a>のコピーを返します。</span>

 <p> <span class="merged" id="HttpClient.3QwA2E" title="原文 : If no SSLParameters were set in the client&apos;s builder, then an implementation specific default set of parameters, that the client will use, is returned."><code>SSLParameters</code>がクライアントビルダーに設定されていない場合、クライアントが使用する実装固有のデフォルトのパラメータ・セットが返されます。</span></p></div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.7"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.4GlHSC" title="原文 : this client&apos;s SSLParameters">このクライアント<code>SSLParameters</code></span></dd>
</dl>
</li>
</ul>
<a id="authenticator()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.1fCLD5"  title="原文:: authenticator">authenticator</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../../../../java.base/java/util/Optional.html" title="class in java.util">Optional</a>&lt;<a href="../../../../java.base/java/net/Authenticator.html" title="class in java.net">Authenticator</a>&gt;&nbsp;authenticator()</pre>
<div class="block"><span class="merged" id="HttpClient.3R0Nui.spl1" title="原文 : Returns an Optional containing the Authenticator set on this client.">このクライアントに設定された<a href="../../../../java.base/java/net/Authenticator.html" ><code>Authenticator</code></a>を含む<code>Optional</code>を返します。</span> <span class="merged" id="HttpClient.3R0Nui.spl2" title="原文 : If no Authenticator was set in the client&apos;s builder, then the Optional is empty."><code>Authenticator</code>がクライアント・ビルダーに設定されていない場合、<code>Optional</code>は空です。</span> </div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.8"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.az4Im" title="原文 : an Optional containing this client&apos;s Authenticator">このクライアントを含む<code>Optional</code> <code>Authenticator</code></span></dd>
</dl>
</li>
</ul>
<a id="version()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.3UzSqZ"  title="原文:: version">version</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="HttpClient.Version.html" title="enum in java.net.http">HttpClient.Version</a>&nbsp;version()</pre>
<div class="block"><span class="merged" id="HttpClient.8i8MU.spl1" title="原文 : Returns the preferred HTTP protocol version for this client.">このクライアントの優先HTTPプロトコル・バージョンを返します。</span> <span class="merged" id="HttpClient.8i8MU.spl2" title="原文 : The default value is HttpClient.Version.HTTP_2">デフォルト値は<a href="HttpClient.Version.html#HTTP_2"><code>HttpClient.Version.HTTP_2</code></a>です。</span> </div>
<dl>
<dt><span class="merged" id="HttpClient.1WSzU2.2"  title="原文: Implementation Note:"><span class="simpleTagLabel">実装上のノート:</span></span></dt>
<dd><span class="merged" id="HttpClient.L5trC.spl1" title="原文 : Constraints may also affect the selection of protocol version.">制約は、プロトコル・バージョンの選択に影響する場合もあります。</span> <span class="merged" id="HttpClient.L5trC.spl2" title="原文 : For example, if HTTP/2 is requested through a proxy, and if the implementation does not support this mode, then HTTP/1.1 may be used">たとえば、プロキシを介してHTTP/2がリクエストされ、実装がこのモードをサポートしない場合、HTTP/1.1を使用できます。</span> </dd>
<dt><span class="merged" id="HttpClient.3jgv1U.9"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.txzLN" title="原文 : the HTTP protocol version requested">リクエストされたHTTPプロトコルのバージョン</span></dd>
</dl>
</li>
</ul>
<a id="executor()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.4WxBOm"  title="原文:: executor">executor</span></h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../../../../java.base/java/util/Optional.html" title="class in java.util">Optional</a>&lt;<a href="../../../../java.base/java/util/concurrent/Executor.html" title="interface in java.util.concurrent">Executor</a>&gt;&nbsp;executor()</pre>
<div class="block"><span class="merged" id="HttpClient.2Gi8fB.spl1" title="原文 : Returns an Optional containing this client&apos;s Executor.">このクライアント<a href="../../../../java.base/java/util/concurrent/Executor.html" ><code>Executor</code></a>を含む<code>Optional</code>を返します。</span> <span class="merged" id="HttpClient.2Gi8fB.spl2" title="原文 : If no Executor was set in the client&apos;s builder, then the Optional is empty."><code>Executor</code>がクライアント・ビルダーに設定されていない場合、<code>Optional</code>は空です。</span> 

 <p> <span class="merged" id="HttpClient.2oZcaf" title="原文 : Even though this method may return an empty optional, the HttpClient may still have an non-exposed default executor that is used for executing asynchronous and dependent tasks.">このメソッドは空のオプションを返すかもしれませんが、<code> HttpClient</code>には、非同期および依存タスクの実行に使用される<a href="HttpClient.Builder.html#executor(java.util.concurrent.Executor)">「デフォルトのエグゼキュータ」</a>がまだ公開されていないことがあります。</span></p></div>
<dl>
<dt><span class="merged" id="HttpClient.3jgv1U.10"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.2B0sws" title="原文 : an Optional containing this client&apos;s Executor">このクライアントを含む<code>Optional</code> <code>Executor</code></span></dd>
</dl>
</li>
</ul>
<a id="send(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.347jQb"  title="原文:: send">send</span></h4>
<pre class="methodSignature">public abstract&nbsp;&lt;T&gt;&nbsp;<a href="HttpResponse.html" title="interface in java.net.http">HttpResponse</a>&lt;T&gt;&nbsp;send&#8203;(<a href="HttpRequest.html" title="class in java.net.http">HttpRequest</a>&nbsp;request,
                                         <a href="HttpResponse.BodyHandler.html" title="interface in java.net.http">HttpResponse.BodyHandler</a>&lt;T&gt;&nbsp;responseBodyHandler)
                                  throws <a href="../../../../java.base/java/io/IOException.html" title="class in java.io">IOException</a>,
                                         <a href="../../../../java.base/java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre>
<div class="block"><span class="merged" id="HttpClient.BejDr.spl1" title="原文 : Sends the given request using this client, blocking if necessary to get the response.">このクライアントを使用してリクエストを送信し、必要に応じてブロックしてレスポンスを取得します。</span> <span class="merged" id="HttpClient.BejDr.spl2" title="原文 : The returned HttpResponse&lt;T&gt; contains the response status, headers, and body ( as handled by given response body handler ).">返された<a href="HttpResponse.html" ><code>HttpResponse</code></a> <code>&lt;T></code>には、レスポンス・ステータス、ヘッダー、および本文(指定されたレスポンス本文ハンドラによって処理される)が含まれています。</span> </div>
<dl>
<dt><span class="merged" id="HttpClient.4COwpx"  title="原文: Type Parameters:"><span class="paramLabel">型パラメータ:</span></span></dt>
<dd><span class="merged" id="HttpClient.1FL4Oe" title="原文 : T - the response body type"><code>T</code> - レスポンス本文型</span></dd>
<dt><span class="merged" id="HttpClient.2p3GDA"  title="原文: Parameters:"><span class="paramLabel">パラメータ:</span></span></dt>
<dd><span class="merged" id="HttpClient.2wBBSH" title="原文 : request - the request"><code>request</code> - リクエスト</span></dd>
<dd><span class="merged" id="HttpClient.2WH4xs" title="原文 : responseBodyHandler - the response body handler"><code>responseBodyHandler</code> - レスポンス本文ハンドラ</span></dd>
<dt><span class="merged" id="HttpClient.3jgv1U.11"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.1cwktY" title="原文 : the response">レスポンス</span></dd>
<dt><span class="merged" id="HttpClient.2tdMyE"  title="原文: Throws:"><span class="throwsLabel">例外:</span></span></dt>
<dd><span class="merged" id="HttpClient.4WXzjJ" title="原文 : IOException - if an I/O error occurs when sending or receiving"><code><a href="../../../../java.base/java/io/IOException.html" >IOException</a></code> - 送信または受信時にI/Oエラーが発生した場合</span></dd>
<dd><span class="merged" id="HttpClient.iHIqq" title="原文 : InterruptedException - if the operation is interrupted"><code><a href="../../../../java.base/java/lang/InterruptedException.html" >InterruptedException</a></code> - 操作が中断された場合</span></dd>
<dd><span class="merged" id="HttpClient.302xuo" title="原文 : IllegalArgumentException - if the request argument is not a request that could have been validly built as specified by HttpRequest.Builder."><code><a href="../../../../java.base/java/lang/IllegalArgumentException.html" >IllegalArgumentException</a></code> - <code>request</code>引数が<a href="HttpRequest.Builder.html" ><code>HttpRequest.Builder</code></a>で指定された有効に作成されたリクエストではない場合。</span></dd>
<dd><span class="merged" id="HttpClient.2oOeI2.spl1" title="原文 : SecurityException - If a security manager has been installed and it denies access to the URL in the given request, or proxy if one is configured."><code><a href="../../../../java.base/java/lang/SecurityException.html" >SecurityException</a></code> - セキュリティ・マネージャがインストールされていて、指定されたリクエストのURLに<a href="../../../../java.base/java/net/URLPermission.html" ><code>access</code></a>を拒否した場合、またはプロキシが構成されている場合はプロキシを拒否します。</span> <span class="merged" id="HttpClient.2oOeI2.spl2" title="原文 : See security checks for further information.">詳細は、<a href="#securitychecks">「セキュリティ・チェック」</a>を参照してください。</span> </dd>
</dl>
</li>
</ul>
<a id="sendAsync(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.2liK9y"  title="原文: sendAsync">sendAsync</span></h4>
<pre class="methodSignature">public abstract&nbsp;&lt;T&gt;&nbsp;<a href="../../../../java.base/java/util/concurrent/CompletableFuture.html" title="class in java.util.concurrent">CompletableFuture</a>&lt;<a href="HttpResponse.html" title="interface in java.net.http">HttpResponse</a>&lt;T&gt;&gt;&nbsp;sendAsync&#8203;(<a href="HttpRequest.html" title="class in java.net.http">HttpRequest</a>&nbsp;request,
                                                                 <a href="HttpResponse.BodyHandler.html" title="interface in java.net.http">HttpResponse.BodyHandler</a>&lt;T&gt;&nbsp;responseBodyHandler)</pre>
<div class="block"><span class="merged" id="HttpClient.tqqJy.1" title="原文 : Sends the given request asynchronously using this client with the given response body handler.">指定されたレスポンス本文ハンドラとともに、このクライアントを使用して、指定されたリクエストを非同期に送信します。</span>

 <p> <span class="merged" id="HttpClient.D25Jz" title="原文 : Equivalent to: sendAsync(request, responseBodyHandler, null).">同等: <code>sendAsync(request, responseBodyHandler, null)</code>。</span></p></div>
<dl>
<dt><span class="merged" id="HttpClient.4COwpx.1"  title="原文: Type Parameters:"><span class="paramLabel">型パラメータ:</span></span></dt>
<dd><span class="merged" id="HttpClient.1FL4Oe.1" title="原文 : T - the response body type"><code>T</code> - レスポンス本文型</span></dd>
<dt><span class="merged" id="HttpClient.2p3GDA.1"  title="原文: Parameters:"><span class="paramLabel">パラメータ:</span></span></dt>
<dd><span class="merged" id="HttpClient.2wBBSH.1" title="原文 : request - the request"><code>request</code> - リクエスト</span></dd>
<dd><span class="merged" id="HttpClient.2WH4xs.1" title="原文 : responseBodyHandler - the response body handler"><code>responseBodyHandler</code> - レスポンス本文ハンドラ</span></dd>
<dt><span class="merged" id="HttpClient.3jgv1U.12"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.3MvMkB" title="原文 : a CompletableFuture&lt;HttpResponse&lt;T&gt;&gt;"><code>CompletableFuture&lt;HttpResponse&lt;T>></code></span></dd>
<dt><span class="merged" id="HttpClient.2tdMyE.1"  title="原文: Throws:"><span class="throwsLabel">例外:</span></span></dt>
<dd><span class="merged" id="HttpClient.302xuo.1" title="原文 : IllegalArgumentException - if the request argument is not a request that could have been validly built as specified by HttpRequest.Builder."><code><a href="../../../../java.base/java/lang/IllegalArgumentException.html" >IllegalArgumentException</a></code> - <code>request</code>引数が<a href="HttpRequest.Builder.html" ><code>HttpRequest.Builder</code></a>で指定された有効に作成されたリクエストではない場合。</span></dd>
</dl>
</li>
</ul>
<a id="sendAsync(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler,java.net.http.HttpResponse.PushPromiseHandler)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4><span class="merged" id="HttpClient.2liK9y.1"  title="原文: sendAsync">sendAsync</span></h4>
<pre class="methodSignature">public abstract&nbsp;&lt;T&gt;&nbsp;<a href="../../../../java.base/java/util/concurrent/CompletableFuture.html" title="class in java.util.concurrent">CompletableFuture</a>&lt;<a href="HttpResponse.html" title="interface in java.net.http">HttpResponse</a>&lt;T&gt;&gt;&nbsp;sendAsync&#8203;(<a href="HttpRequest.html" title="class in java.net.http">HttpRequest</a>&nbsp;request,
                                                                 <a href="HttpResponse.BodyHandler.html" title="interface in java.net.http">HttpResponse.BodyHandler</a>&lt;T&gt;&nbsp;responseBodyHandler,
                                                                 <a href="HttpResponse.PushPromiseHandler.html" title="interface in java.net.http">HttpResponse.PushPromiseHandler</a>&lt;T&gt;&nbsp;pushPromiseHandler)</pre>
<div class="block"><span class="merged" id="HttpClient.Ddqqh.1" title="原文 : Sends the given request asynchronously using this client with the given response body handler and push promise handler.">指定されたレスポンス本文ハンドラとともにこのクライアントを使用して、指定されたリクエストを非同期に送信し、プッシュ・プロ・ミス・ハンドラをプッシュします。</span>

 <p> <span class="merged" id="HttpClient.2Z1zQy" title="原文 : The returned completable future, if completed successfully, completes with an HttpResponse&lt;T&gt; that contains the response status, headers, and body ( as handled by given response body handler ).">戻されたcompletableは、将来正常に完了すると、レスポンス・ステータス、ヘッダーおよび本文(指定されたレスポンス本文ハンドラによって処理される)を含む<a href="HttpResponse.html" ><code>HttpResponse</code></a><code>&lt;T></code>で完了します。</span>

 </p><p> <span class="merged" id="HttpClient.4NuPm4.spl1" title="原文 : Push promises received, if any, are handled by the given pushPromiseHandler."><a href="HttpResponse.PushPromiseHandler.html" >「プッシュ・プロ・ミス」</a>がある場合は、所定の<code>pushPromiseHandler</code>によって処理されます。</span> <span class="merged" id="HttpClient.4NuPm4.spl2" title="原文 : A null valued pushPromiseHandler rejects any push promises."><code>null</code>値が<code>pushPromiseHandler</code>である場合、プッシュ・プロ・ミスは拒否されます。</span> 

 </p><p> <span class="merged" id="HttpClient.3Rv1Kc" title="原文 : The returned completable future completes exceptionally with:">返された完了可能な未来は例外的に次のように完了します:</span>
 <ul>
 <li><span class="merged" id="HttpClient.2STm78" title="原文 : IOException - if an I/O error occurs when sending or receiving"><a href="../../../../java.base/java/io/IOException.html" ><code>IOException</code></a> - 送信時または受信時にI/Oエラーが発生した場合</span></li>
 <li><span class="merged" id="HttpClient.1mdFFV.spl1" title="原文 : SecurityException - If a security manager has been installed and it denies access to the URL in the given request, or proxy if one is configured."><a href="../../../../java.base/java/lang/SecurityException.html" ><code>SecurityException</code></a> - セキュリティ・マネージャがインストールされていて、指定されたリクエストのURLに<a href="../../../../java.base/java/net/URLPermission.html" ><code>access</code></a>を拒否した場合、またはプロキシが構成されている場合はプロキシを拒否します。</span> <span class="merged" id="HttpClient.1mdFFV.spl2" title="原文 : See security checks for further information.">詳細は、<a href="#securitychecks">「セキュリティ・チェック」</a>を参照してください。</span> </li>
 </ul></p></div>
<dl>
<dt><span class="merged" id="HttpClient.4COwpx.2"  title="原文: Type Parameters:"><span class="paramLabel">型パラメータ:</span></span></dt>
<dd><span class="merged" id="HttpClient.1FL4Oe.2" title="原文 : T - the response body type"><code>T</code> - レスポンス本文型</span></dd>
<dt><span class="merged" id="HttpClient.2p3GDA.2"  title="原文: Parameters:"><span class="paramLabel">パラメータ:</span></span></dt>
<dd><span class="merged" id="HttpClient.2wBBSH.2" title="原文 : request - the request"><code>request</code> - リクエスト</span></dd>
<dd><span class="merged" id="HttpClient.2WH4xs.2" title="原文 : responseBodyHandler - the response body handler"><code>responseBodyHandler</code> - レスポンス本文ハンドラ</span></dd>
<dd><span class="merged" id="HttpClient.41HF9n" title="原文 : pushPromiseHandler - push promise handler, may be null"><code>pushPromiseHandler</code> - プッシュ・プロ・ミス・ハンドラ。nullの可能性があります。</span></dd>
<dt><span class="merged" id="HttpClient.3jgv1U.13"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.3MvMkB.1" title="原文 : a CompletableFuture&lt;HttpResponse&lt;T&gt;&gt;"><code>CompletableFuture&lt;HttpResponse&lt;T>></code></span></dd>
<dt><span class="merged" id="HttpClient.2tdMyE.2"  title="原文: Throws:"><span class="throwsLabel">例外:</span></span></dt>
<dd><span class="merged" id="HttpClient.302xuo.2" title="原文 : IllegalArgumentException - if the request argument is not a request that could have been validly built as specified by HttpRequest.Builder."><code><a href="../../../../java.base/java/lang/IllegalArgumentException.html" >IllegalArgumentException</a></code> - <code>request</code>引数が<a href="HttpRequest.Builder.html" ><code>HttpRequest.Builder</code></a>で指定された有効に作成されたリクエストではない場合。</span></dd>
</dl>
</li>
</ul>
<a id="newWebSocketBuilder()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4><span class="merged" id="HttpClient.4gZaLt"  title="原文: newWebSocketBuilder">newWebSocketBuilder</span></h4>
<pre class="methodSignature">public&nbsp;<a href="WebSocket.Builder.html" title="interface in java.net.http">WebSocket.Builder</a>&nbsp;newWebSocketBuilder()</pre>
<div class="block"><span class="merged" id="HttpClient.2d5FZf.1" title="原文 : Creates a new WebSocket builder (optional operation).">新しい<code>WebSocket</code>ビルダー(オプションの操作)を作成します。</span>

 <p> <span class="merged" id="HttpClient.1h6k1A"  title="原文:: Example"><b>例</b></span>
 <pre><code>   HttpClient client = HttpClient.newHttpClient();
   CompletableFuture&lt;WebSocket&gt; ws = client.newWebSocketBuilder()
           .buildAsync(URI.create("ws://websocket.example.com"), listener); </code></pre>

 </p><p> <span class="merged" id="HttpClient.3bhseL" title="原文 : Finer control over the WebSocket Opening Handshake can be achieved by using a custom HttpClient.">カスタムの<code>HttpClient</code>を使用すると、WebSocketオープニング・ハンドシェイクの細かい制御が可能になります。</span>

 </p><p> <span class="merged" id="HttpClient.1h6k1A.1"  title="原文:: Example"><b>例</b></span>
 <pre><code>   InetSocketAddress addr = new InetSocketAddress("proxy.example.com", 80);
   HttpClient client = HttpClient.newBuilder()
           .proxy(ProxySelector.of(addr))
           .build();
   CompletableFuture&lt;WebSocket&gt; ws = client.newWebSocketBuilder()
           .buildAsync(URI.create("ws://websocket.example.com"), listener); </code></pre></p></div>
<dl>
<dt><span class="merged" id="HttpClient.1rBKEQ"  title="原文:: Implementation Requirements:"><span class="simpleTagLabel">実装要件:</span></span></dt>
<dd><span class="merged" id="HttpClient.3UMbyW.spl1"  title="原文: The default implementation of this method throws UnsupportedOperationException.">このメソッドのデフォルト実装は<code>UnsupportedOperationException</code>をスローします。</span> <span class="merged" id="HttpClient.3UMbyW.spl2" title="原文 : Clients obtained through newHttpClient() or newBuilder() return a WebSocket builder."><a href="#newHttpClient()"><code>newHttpClient()</code></a>または<a href="#newBuilder()"><code>newBuilder()</code></a>で取得したクライアントは、<code>WebSocket</code> Builderを返します。</span> </dd>
<dt><span class="merged" id="HttpClient.1WSzU2.3"  title="原文: Implementation Note:"><span class="simpleTagLabel">実装上のノート:</span></span></dt>
<dd><span class="merged" id="HttpClient.3JRgPZ.spl1" title="原文 : Both builder and WebSockets created with it operate in a non-blocking fashion.">ビルダーとそれで作成された<code>WebSocket</code>の両方が、非ブロッキングの方法で動作します。</span> <span class="merged" id="HttpClient.3JRgPZ.spl2" title="原文 : That is, their methods do not block before returning a CompletableFuture.">つまり、それらのメソッドは<code>CompletableFuture</code>を返す前にブロックしません。</span> <span class="merged" id="HttpClient.3JRgPZ.spl3" title="原文 : Asynchronous tasks are executed in this HttpClient&apos;s executor.">非同期タスクは、この<code>HttpClient</code>エグゼキュータで実行されます。</span> 

 <p> <span class="merged" id="HttpClient.2Kh9xP" title="原文 : When a CompletionStage returned from Listener.onClose completes, the WebSocket will send a Close message that has the same code the received message has and an empty reason."><code>CompletionStage</code>が<a href="WebSocket.Listener.html#onClose(java.net.http.WebSocket,int,java.lang.String)"><code>Listener.onClose</code></a>から返されると、<code>WebSocket</code>は、受信したメッセージと同じコードを持ち、空の理由があるCloseメッセージを送信します。</span></p></dd>
<dt><span class="merged" id="HttpClient.3jgv1U.14"  title="原文: Returns:"><span class="returnLabel">戻り値:</span></span></dt>
<dd><span class="merged" id="HttpClient.3McDbJ" title="原文 : a WebSocket.Builder">a <code>WebSocket.Builder</code></span></dd>
<dt><span class="merged" id="HttpClient.2tdMyE.3"  title="原文: Throws:"><span class="throwsLabel">例外:</span></span></dt>
<dd><span class="merged" id="HttpClient.1cjI3U" title="原文 : UnsupportedOperationException - if this HttpClient does not provide WebSocket support"><code><a href="../../../../java.base/java/lang/UnsupportedOperationException.html" >UnsupportedOperationException</a></code> - この<code>HttpClient</code>がWebSocketサポートを提供しない場合</span></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">

<!-- ======= START OF BOTTOM NAVBAR ====== -->

<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><span class="merged" id="HttpClient.4Ajg48"  title="原文: Skip navigation links"><a href="#skip.navbar.bottom" >ナビゲーション・リンクをスキップ</a></span></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="ナビゲーション">
<li><span class="merged" id="HttpClient.3khU33.1"  title="原文: Overview"><a href="../../../../index.html">概要</a></span></li>
<li><span class="merged" id="HttpClient.1Xma6u.1"  title="原文: Module"><a href="../../../module-summary.html">モジュール</a></span></li>
<li><span class="merged" id="HttpClient.2F23Jc.1"  title="原文: Package"><a href="package-summary.html">パッケージ</a></span></li>
<li class="navBarCell1Rev"><span class="merged" id="HttpClient.oZPHH.2"  title="原文: Class">クラス</span></li>
<li><span class="merged" id="HttpClient.4eXea8.1"  title="原文: Use"><a href="class-use/HttpClient.html">使用</a></span></li>
<li><span class="merged" id="HttpClient.3UHpUV.1"  title="原文: Tree"><a href="package-tree.html">ツリー</a></span></li>
<li><span class="merged" id="HttpClient.1zLq34.1"  title="原文: Deprecated"><a href="../../../../deprecated-list.html">非推奨</a></span></li>
<li><span class="merged" id="HttpClient.11YYjx.1"  title="原文: Index"><a href="../../../../index-files/index-1.html">索引</a></span></li>
<li><span class="merged" id="HttpClient.4UGs5H.1"  title="原文: Help"><a href="../../../../help-doc.html">ヘルプ</a></span></li>
</ul>
<div class="aboutLanguage"><div style="margin-top: 14px;"><span class="merged" id="HttpClient.2uvGom.1" title="原文 : Java SE 11 &amp; JDK 11"><strong>Java SE 11 &amp; JDK 11</strong></span> </div></div>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_bottom">
<li><span class="merged" id="HttpClient.2iWcq7.1"  title="原文: All&nbsp;Classes"><a href="../../../../allclasses.html">すべてのクラス</a></span></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div><span class="merged" id="HttpClient.1FBGVb.2"  title="原文: JavaScript is disabled on your browser.">JavaScriptがブラウザで無効になっています。</span></div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li><span class="merged" id="HttpClient.4QGzVB.1"  title="原文: Summary:&nbsp;">サマリー:&nbsp;</span></li>
<li><span class="merged" id="HttpClient.3FH7i5.1"  title="原文: Nested&nbsp;|&nbsp;"><a href="#nested.class.summary">ネスト</a>&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.2FJFo6.2"  title="原文: Field&nbsp;|&nbsp;">フィールド&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.43qrBZ.1"  title="原文: Constr&nbsp;|&nbsp;"><a href="#constructor.summary">コンストラクタ</a>&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.p4fG3.1"  title="原文: Method"><a href="#method.summary">メソッド</a></span></li>
</ul>
<ul class="subNavList">
<li><span class="merged" id="HttpClient.1tflnv.1"  title="原文: Detail:&nbsp;">詳細:&nbsp;</span></li>
<li><span class="merged" id="HttpClient.2FJFo6.3"  title="原文: Field&nbsp;|&nbsp;">フィールド&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.21J2FL.1"  title="原文: Constr&nbsp;|&nbsp;"><a href="#constructor.detail">コンストラクタ</a>&nbsp;|&nbsp;</span></li>
<li><span class="merged" id="HttpClient.3bPfAb.1"  title="原文: Method"><a href="#method.detail">メソッド</a></span></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>

<!-- ======== END OF BOTTOM NAVBAR ======= -->

</nav>
<p class="legalCopy"><span class="merged" id="HttpClient.1TqkXd.spl1" title="原文 : Report a bug or suggest an enhancement For further API reference and developer documentation see the Java SE Documentation, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples."><small><a href="https://bugreport.java.com/bugreport/">バグを報告する、または機能強化を提案する</a> <br>さらにAPIリファレンスと開発者ドキュメントについては、概念的な概要、用語の定義、回避策、および作業コードの例など、より詳細な開発者向けの説明が含まれている<a href="https://www.oracle.com/pls/topic/lookup?ctx=javase11&id=homepage" target="_blank">「Java SEドキュメンテーション」</a>を参照してください。</span> <span class="merged" id="HttpClient.1TqkXd.spl2" title="原文 :  Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries."><br>Javaは、米国およびその他の国におけるOracleおよび/またはその関連会社の商標または登録商標です。</span> <span class="merged" id="HttpClient.1TqkXd.spl3"  title="原文::  Copyright © 1993, 2023, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA. All rights reserved."><br> <a href="../../../../../legal/copyright.html">Copyright</a> © 1993, 2023, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.<br>All rights reserved. </span> <span class="merged" id="HttpClient.1TqkXd.spl4"  title="原文: Use is subject to license terms and the documentation redistribution policy.">使用は<a href="https://download.oracle.com/otndocs/jcp/java_se-11-final-spec/license.html">「ライセンス条項」</a>と<a href="https://www.oracle.com/java/technologies/redistribution-policy.html">「ドキュメンテーション再配布ポリシー」</a>に従います。</span>  <!-- Version 11.0.20+9-LTS-256 --></small></p>
</footer>
<!-- Start SiteCatalyst code   -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->
<noscript>
<p><span class="merged" id="HttpClient.3vBeWk"  title="原文: Scripting on this page tracks web page traffic, but does not change the content in any way.">このページのスクリプトはWebページのトラフィックを追跡するものであり、内容は変更されません。</span></p>
</noscript>
</body>
</html>
